openapi: 3.0.0
info:
  title: API de Gestion des Dettes
  description: API pour la gestion des utilisateurs, des clients et des articles.
  version: 1.0.0
  contact:
    email: contact@votre-domaine.com
servers:
  - url: http://127.0.0.1:8000/wane
    description: Local server
  - url: http://production.app/wane
    description: Production server
paths:
  /v1/login:
    post:
      summary: Authentification de l'utilisateur
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: Succès de l'authentification
        "401":
          description: Erreur d'authentification
  /v1/logout:
    post:
      summary: Déconnexion de l'utilisateur
      tags:
        - Authentification
      responses:
        "200":
          description: Succès de la déconnexion
  /v1/register:
    post:
      summary: Inscription d'un nouvel utilisateur
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "201":
          description: Utilisateur créé avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/users:
    get:
      summary: Récupérer tous les utilisateurs
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des utilisateurs récupérée avec succès
    post:
      summary: Ajouter un nouvel utilisateur
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "201":
          description: Utilisateur créé avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/users/{id}:
    get:
      summary: Récupérer un utilisateur spécifique
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Utilisateur récupéré avec succès
        "404":
          description: Utilisateur non trouvé
    put:
      summary: Mettre à jour un utilisateur spécifique
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: newpassword123
      responses:
        "200":
          description: Utilisateur mis à jour avec succès
        "404":
          description: Utilisateur non trouvé
    patch:
      summary: Mettre à jour partiellement un utilisateur spécifique
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
      responses:
        "200":
          description: Utilisateur mis à jour avec succès
        "404":
          description: Utilisateur non trouvé
    delete:
      summary: Supprimer un utilisateur spécifique
      tags:
        - Utilisateurs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Utilisateur supprimé avec succès
        "404":
          description: Utilisateur non trouvé
  /v1/clients:
    get:
      summary: Récupérer tous les clients avec filtrage, tri et pagination
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des clients récupérée avec succès
    post:
      summary: Ajouter un nouveau client
      tags:
        - Clients
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: John Doe
                prenom:
                  type: string
                  example: Jane Doe
                telephone:
                  type: string
                  example: "1234567890"
      responses:
        "201":
          description: Client créé avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/clients/{id}:
    get:
      summary: Récupérer un client spécifique
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Client récupéré avec succès
        "404":
          description: Client non trouvé
    put:
      summary: Mettre à jour un client spécifique
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: John Doe
                prenom:
                  type: string
                  example: Jane Doe
                telephone:
                  type: string
                  example: "1234567890"
      responses:
        "200":
          description: Client mis à jour avec succès
        "404":
          description: Client non trouvé
    patch:
      summary: Mettre à jour partiellement un client spécifique
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: John Doe
      responses:
        "200":
          description: Client mis à jour avec succès
        "404":
          description: Client non trouvé
    delete:
      summary: Supprimer un client spécifique
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Client supprimé avec succès
        "404":
          description: Client non trouvé
  /v1/clients/{id}/dettes:
    post:
      summary: Récupérer les dettes d'un client
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettes du client récupérées avec succès
        "404":
          description: Client non trouvé
  /v1/clients/{id}/user:
    post:
      summary: Récupérer un client avec son utilisateur
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Client avec utilisateur récupéré avec succès
        "404":
          description: Client non trouvé
  /v1/clients/telephone:
    get:
      summary: Rechercher un client par numéro de téléphone (recherche partielle)
      tags:
        - Clients
      security:
        - bearerAuth: []
      parameters:
        - name: telephone
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Clients correspondants récupérés avec succès
        "404":
          description: Aucun client correspondant trouvé
  /v1/articles:
    get:
      summary: Récupérer tous les articles
      tags:
        - Articles
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des articles récupérée avec succès
    post:
      summary: Ajouter un nouvel article
      tags:
        - Articles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  example: Article 1
                prix:
                  type: number
                  example: 10.99
                quantite_stock:
                  type: integer
                  example: 100
      responses:
        "201":
          description: Article créé avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/articles/{id}:
    get:
      summary: Récupérer un article spécifique
      tags:
        - Articles
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Article récupéré avec succès
        "404":
          description: Article non trouvé
    put:
      summary: Mettre à jour un article spécifique
      tags:
        - Articles
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  example: Article 1
                prix:
                  type: number
                  example: 10.99
                quantite_stock:
                  type: integer
                  example: 100
      responses:
        "200":
          description: Article mis à jour avec succès
        "404":
          description: Article non trouvé
    patch:
      summary: Mettre à jour partiellement un article spécifique
      tags:
        - Articles
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  example: Article 1
      responses:
        "200":
          description: Article mis à jour avec succès
        "404":
          description: Article non trouvé
    delete:
      summary: Supprimer un article (soft delete)
      tags:
        - Articles
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Article supprimé avec succès
        "404":
          description: Article non trouvé
  /v1/articles/libelle:
    post:
      summary: Récupérer un article par son libellé
      tags:
        - Articles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  example: Article 1
      responses:
        "200":
          description: Article récupéré avec succès
        "404":
          description: Article non trouvé
  /v1/articles/updateStock:
    post:
      summary: Mettre à jour le stock des articles
      tags:
        - Articles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                articles:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      quantite_stock:
                        type: integer
                        example: 100
      responses:
        "200":
          description: Stock des articles mis à jour avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/dettes:
    get:
      summary: Récupérer toutes les dettes
      tags:
        - Dettes
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des dettes récupérée avec succès
    post:
      summary: Ajouter une dette
      tags:
        - Dettes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: integer
                  example: 1
                date:
                  type: string
                  format: date
                  example: 2022-01-01
                montant:
                  type: number
                  example: 100
      responses:
        "201":
          description: Dette créée avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/dettes/{id}:
    put:
      summary: Mettre à jour une dette
      tags:
        - Dettes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: integer
                  example: 1
                date:
                  type: string
                  format: date
                  example: 2022-01-01
                montant:
                  type: number
                  example: 100
      responses:
        "200":
          description: Dette mise à jour avec succès
        "404":
          description: Dette non trouvée
    delete:
      summary: Supprimer une dette
      tags:
        - Dettes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Dette supprimée avec succès
        "404":
          description: Dette non trouvée
  /v1/dettes/remboursement:
    post:
      summary: Effectuer un remboursement de la dette
      tags:
        - Dettes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detteId:
                  type: integer
                  example: 1
                montant:
                  type: number
                  example: 50
      responses:
        "200":
          description: Remboursement effectué avec succès
        "400":
          description: Erreur dans les données fournies
  /v1/dettes/annulation:
    post:
      summary: Annuler une dette
      tags:
        - Dettes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detteId:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Dette annulée avec succès
        "400":
          description: Erreur dans les données fournies
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
